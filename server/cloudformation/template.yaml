---
Resources:
  palworldcdkdemo61347715060138F4C040:
    Condition: createBucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - ''
        - - !Ref BucketName
          - '-'
          - !Ref AWS::AccountId
          - '-'
          - !Ref AWS::Region
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Retain
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - 'palworld-cdk-demo'
              - '-'
              - !Ref AWS::Region
    Metadata:
      aws:cdk:path: CodeStack/Vpc/Resource
  VpcpublicSubnet1Subnet2BB74ED7:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet1/Subnet
  VpcpublicSubnet1RouteTable15C15F8E:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet1/RouteTable
  VpcpublicSubnet1RouteTableAssociation4E83B6E4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet1RouteTable15C15F8E
      SubnetId:
        Ref: VpcpublicSubnet1Subnet2BB74ED7
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet1/RouteTableAssociation
  VpcpublicSubnet1DefaultRouteB88F9E93:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
      RouteTableId:
        Ref: VpcpublicSubnet1RouteTable15C15F8E
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet1/DefaultRoute
  VpcpublicSubnet1EIP411541E6:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet1
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet1/EIP
  VpcpublicSubnet1NATGatewayA036E8A6:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VpcpublicSubnet1EIP411541E6
          - AllocationId
      SubnetId:
        Ref: VpcpublicSubnet1Subnet2BB74ED7
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet1
    DependsOn:
      - VpcpublicSubnet1DefaultRouteB88F9E93
      - VpcpublicSubnet1RouteTableAssociation4E83B6E4
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet1/NATGateway
  VpcpublicSubnet2SubnetE34B022A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet2
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet2/Subnet
  VpcpublicSubnet2RouteTableC5A6DF77:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet2
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet2/RouteTable
  VpcpublicSubnet2RouteTableAssociationCCE257FF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet2RouteTableC5A6DF77
      SubnetId:
        Ref: VpcpublicSubnet2SubnetE34B022A
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet2/RouteTableAssociation
  VpcpublicSubnet2DefaultRoute732F0BEB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
      RouteTableId:
        Ref: VpcpublicSubnet2RouteTableC5A6DF77
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet2/DefaultRoute
  VpcpublicSubnet3SubnetDFEF064A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet3
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet3/Subnet
  VpcpublicSubnet3RouteTable80517A9C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/publicSubnet3
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet3/RouteTable
  VpcpublicSubnet3RouteTableAssociation61C43F88:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet3RouteTable80517A9C
      SubnetId:
        Ref: VpcpublicSubnet3SubnetDFEF064A
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet3/RouteTableAssociation
  VpcpublicSubnet3DefaultRouteA3904BF0:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
      RouteTableId:
        Ref: VpcpublicSubnet3RouteTable80517A9C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CodeStack/Vpc/publicSubnet3/DefaultRoute
  VpcprivateSubnet1SubnetCEAD3716:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CodeStack/Vpc/privateSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet1/Subnet
  VpcprivateSubnet1RouteTable1979EACB:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/privateSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet1/RouteTable
  VpcprivateSubnet1RouteTableAssociationEEBD93CE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet1RouteTable1979EACB
      SubnetId:
        Ref: VpcprivateSubnet1SubnetCEAD3716
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet1/RouteTableAssociation
  VpcprivateSubnet1DefaultRouteB506891A:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcpublicSubnet1NATGatewayA036E8A6
      RouteTableId:
        Ref: VpcprivateSubnet1RouteTable1979EACB
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet1/DefaultRoute
  VpcprivateSubnet2Subnet2DE7549C:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CodeStack/Vpc/privateSubnet2
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet2/Subnet
  VpcprivateSubnet2RouteTable4D0FFC8C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/privateSubnet2
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet2/RouteTable
  VpcprivateSubnet2RouteTableAssociationB691E645:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet2RouteTable4D0FFC8C
      SubnetId:
        Ref: VpcprivateSubnet2Subnet2DE7549C
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet2/RouteTableAssociation
  VpcprivateSubnet2DefaultRouteBAC3C1C3:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcpublicSubnet1NATGatewayA036E8A6
      RouteTableId:
        Ref: VpcprivateSubnet2RouteTable4D0FFC8C
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet2/DefaultRoute
  VpcprivateSubnet3SubnetA5AC68D9:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: 10.0.5.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CodeStack/Vpc/privateSubnet3
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet3/Subnet
  VpcprivateSubnet3RouteTableAF0D9985:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: CodeStack/Vpc/privateSubnet3
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet3/RouteTable
  VpcprivateSubnet3RouteTableAssociation88A12983:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet3RouteTableAF0D9985
      SubnetId:
        Ref: VpcprivateSubnet3SubnetA5AC68D9
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet3/RouteTableAssociation
  VpcprivateSubnet3DefaultRoute5028F7A1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcpublicSubnet1NATGatewayA036E8A6
      RouteTableId:
        Ref: VpcprivateSubnet3RouteTableAF0D9985
    Metadata:
      aws:cdk:path: CodeStack/Vpc/privateSubnet3/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - 'palworld-cdk-demo'
              - '-'
              - !Ref AWS::Region
    Metadata:
      aws:cdk:path: CodeStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/Vpc/VPCGW
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:ec2:'
                        - !Ref AWS::Region
                        - ':'
                        - 613477150601
                        - !Ref AWS::AccountId
                        - Fn::GetAtt:
                            - Vpc8378EB38
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: CodeStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  SecurityGroupDD263621:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH (TCP port 22) in
      GroupName: palworld-cdk-demo-613477150601
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow SSH Access
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: Allow 8211 tcp Access
          FromPort: 8211
          IpProtocol: tcp
          ToPort: 8211
        - CidrIp: 0.0.0.0/0
          Description: Allow 8211 udp Access
          FromPort: 8211
          IpProtocol: udp
          ToPort: 8211
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CodeStack/SecurityGroup/Resource
  servereip:
    Type: AWS::EC2::EIP
    Metadata:
      aws:cdk:path: CodeStack/server-eip
  palserverkeypairBE8C875E:
    Condition: createKeyPair
    Type: AWS::EC2::KeyPair
    Properties:
      KeyFormat: pem
      KeyName: !Join
        - ''
        - - 'pal-server-keypair'
          - '-'
          - !Ref AWS::Region
      KeyType: rsa
    Metadata:
      aws:cdk:path: CodeStack/pal-server-keypair/Resource
  InstanceInstanceRoleE9785DE5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/AmazonSSMManagedInstanceCore'
      Tags:
        - Key: Name
          Value: palworld-game-server
    Metadata:
      aws:cdk:path: CodeStack/Instance/InstanceRole/Resource
  InstanceInstanceProfileAB5AEF02:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: InstanceInstanceRoleE9785DE5
    Metadata:
      aws:cdk:path: CodeStack/Instance/InstanceProfile
  InstanceC1063A87:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      IamInstanceProfile:
        Ref: InstanceInstanceProfileAB5AEF02
      ImageId: !Ref UbuntuAmi
      InstanceType: !Ref ServerSize
      KeyName: !Join
        - ''
        - - 'pal-server-keypair'
          - '-'
          - !Ref AWS::Region
      SecurityGroupIds:
        - Fn::GetAtt:
            - SecurityGroupDD263621
            - GroupId
      SubnetId:
        Ref: VpcpublicSubnet1Subnet2BB74ED7
      Tags:
        - Key: Name
          Value: !Ref ServerName
      UserData:
        Fn::Base64: '#!/bin/bash'
    DependsOn:
      - InstanceInstanceRoleE9785DE5
  servereipassociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId:
        Fn::GetAtt:
          - servereip
          - AllocationId
      InstanceId:
        Ref: InstanceC1063A87
    Metadata:
      aws:cdk:path: CodeStack/server-eip-association
  BootstrapDocument:
    Type: AWS::SSM::Document
    # Condition: ShouldCreate
    Properties:
      Content:
        schemaVersion: '2.2'
        description: Simple SSM Document
        mainSteps:
          - action: aws:runShellScript
            name: runShellScript
            inputs:
              runCommand:
                - echo "bootstrap started"
                - mkdir /opt/steam
                - mkdir /palworld-server
                - echo "[INFO] INSTALLING SOFTWARE"
                - sudo apt-get update
                - sudo apt-get install -y curl lib32gcc1 lsof git awscli
                - echo "[INFO] DOWNLOADING AND INSTALLING STEAM CMD"
                - wget -P /opt/steam https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
                - yes "" | sudo add-apt-repository multiverse
                - yes "" | sudo dpkg --add-architecture i386
                - sudo apt update
                - 'tar -xzf /opt/steam/steamcmd_linux.tar.gz -C /opt/steam '
                - chmod 755 /opt/steam/steamcmd.sh
                - echo "[INFO] CREATING STEAM USER"
                - useradd -m -U steam
                - chown -R steam:steam /palworld-server
                - echo "[INFO] SETTING UP STEAMCMD INSTALLER TO DOWNLOAD PALWORLD"
                - sudo chown -R steam:steam /opt/steam
                - |-
                  echo "@NoPromptForPassword 1
                  force_install_dir /palworld-server
                  login anonymous
                  app_update 2394010 validate
                  quit" > /opt/steam/download-palworld.txt
                - echo "[INFO] DOWNLOADING PALWORLD"
                - sudo -u steam /opt/steam/steamcmd.sh +runscript /opt/steam/download-palworld.txt
                - sudo -u steam mkdir -p /home/steam/.steam/sdk64/
                - sudo -u steam /opt/steam/steamcmd.sh +login anonymous +app_update 1007
                  +quit
                - sleep 60
                - sudo -u steam cp "/home/steam/Steam/steamapps/common/Steamworks SDK
                  Redist/linux64/steamclient.so" /home/steam/.steam/sdk64/
                - echo "[INFO] CREATING SYSTEMD SERVICE PALWORLD"
                - |-
                  sudo echo "[Unit]
                  Description=Palworld Dedicated Server
                  After=network.target

                  [Service]
                  Type=simple
                  LimitNOFILE=10000
                  User=steam
                  Group=steam
                  ExecStartPre=/opt/steam/steamcmd.sh +runscript /opt/steam/download-palworld.txt
                  WorkingDirectory=/palworld-server
                  ExecStart=/palworld-server/PalServer.sh EpicApp=PalServer

                  Restart=on-failure
                  RestartSec=20s

                  [Install]
                  WantedBy=multi-user.target" > /etc/systemd/system/palworld.service
                - sudo mkdir -p /palworld-server/Pal/Saved/Config/LinuxServer/
                - |-
                  sudo echo "[/Script/Pal.PalGameWorldSettings]
                  OptionSettings=(Difficulty=${difficulty},DayTimeSpeedRate=${day_time_speed_rate},NightTimeSpeedRate=${night_time_speed_rate},ExpRate=${exp_rate},PalCaptureRate=${pal_capture_rate},PalSpawnNumRate=${pal_spawn_num_rate},PalDamageRateAttack=${pal_damage_rate_attack},PalDamageRateDefense=${pal_damage_rate_defense},PlayerDamageRateAttack=${player_damage_rate_attack},PlayerDamageRateDefense=${player_damage_rate_defense},PlayerStomachDecreaceRate=${player_stomach_decrease_rate},PlayerStaminaDecreaceRate=${player_stamina_decrease_rate},PlayerAutoHPRegeneRate=${player_auto_hp_regen_rate},PlayerAutoHpRegeneRateInSleep=${player_auto_hp_regen_rate_in_sleep},PalStomachDecreaceRate=${pal_stomach_decrease_rate},PalStaminaDecreaceRate=${pal_stamina_decrease_rate},PalAutoHPRegeneRate=${pal_auto_hp_regen_rate},PalAutoHpRegeneRateInSleep=${pal_auto_hp_regene_rate_in_sleep},BuildObjectDamageRate=${build_object_damage_rate},BuildObjectDeteriorationDamageRate=${build_object_deterioration_damage_rate},CollectionDropRate=${collection_drop_rate},CollectionObjectHpRate=${collection_object_hp_rate},CollectionObjectRespawnSpeedRate=${collection_object_respawn_speed_rate},EnemyDropItemRate=${enemy_drop_item_rate},DeathPenalty=${death_penalty},bEnablePlayerToPlayerDamage=${enable_player_to_player_damage},bEnableFriendlyFire=${enable_friendly_fire},bEnableInvaderEnemy=${enable_invader_enemy},bActiveUNKO=${active_unko},bEnableAimAssistPad=${enable_aim_assist_pad},bEnableAimAssistKeyboard=${enable_aim_assist_keyboard},DropItemMaxNum=${drop_item_max_num},DropItemMaxNum_UNKO=${drop_item_max_num_unko},BaseCampMaxNum=${base_camp_max_num},BaseCampWorkerMaxNum=${base_camp_worker_max_num},DropItemAliveMaxHours=${drop_item_alive_max_hours},bAutoResetGuildNoOnlinePlayers=${auto_reset_guild_no_online_players},AutoResetGuildTimeNoOnlinePlayers=${auto_reset_guild_time_no_online_players},GuildPlayerMaxNum=${guild_player_max_num},PalEggDefaultHatchingTime=${pal_egg_default_hatching_time},WorkSpeedRate=${work_speed_rate},bIsMultiplay=${is_multiplay},bIsPvP=${is_pvp},bCanPickupOtherGuildDeathPenaltyDrop=${can_pickup_other_guild_death_penalty_drop},bEnableNonLoginPenalty=${enable_non_login_penalty},bEnableFastTravel=${enable_fast_travel},bIsStartLocationSelectByMap=${is_start_location_select_by_map},bExistPlayerAfterLogout=${exist_player_after_logout},bEnableDefenseOtherGuildPlayer=${enable_defense_other_guild_player},CoopPlayerMaxNum=${coop_player_max_num},ServerPlayerMaxNum=${server_player_max_num},ServerName="${server_name}",ServerDescription="${server_description}",%{ if admin_password != "" ~}AdminPassword="${admin_password}",%{ else ~}AdminPassword="",%{ endif ~}%{ if server_password != "" ~}ServerPassword="${server_password}",%{ else ~}ServerPassword="",%{ endif ~}PublicPort=${public_port},%{ if public_ip != "" ~}PublicIP="${public_ip}",%{ else ~}PublicIP="",%{ endif ~}RCONEnabled=${enable_rcon},%{ if rcon_port != "" ~}RCONPort=${rcon_port},%{ else ~}RCONPort="",%{ endif ~}%{ if region != "" ~}Region="${region}",%{ else ~}Region="",%{ endif ~}bUseAuth=${use_auth},BanListURL="${ban_list_url}")" > /palworld-server/Pal/Saved/Config/LinuxServer/PalWorldSettings.ini
                - chown -R steam:steam /palworld-server/Pal/Saved
                - chmod -R 775 /palworld-server/Pal/Saved
                - systemctl daemon-reload
                - echo "[INFO] ENABLING PALWORLD.SERVICE"
                - systemctl enable palworld
                - echo "[INFO] STARTING PALWORLD.SERVICE"
                - systemctl start palworld
      DocumentType: Command
      Name: dedicated-server-bootstrap-document-v0.1
  MySSMAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: BootstrapAssociation
      Name: dedicated-server-bootstrap-document-v0.1
      Targets:
        - Key: InstanceIds
          Values:
            - Ref: InstanceC1063A87
    Metadata:
      aws:cdk:path: CodeStack/MySSMAssociation
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VRwW7CMAz9lt1DBt1lV2ATQpOmqExcpzR4zNAmKHFAVdV/n0voAie/vOc8P8uFnBWFnD7pS5iY3XFSYyW7DWlzFEx9d+FFdotojkBi+WNvKBXlajRtptO7F2AK2W1PZlC2ailUrFjYxMomk4xKFwm+dFVD5jM3D8EZ1ITO/jcP4H2thvKpaaUJLroVyuOZYTZeWwLPeGxISW6vOfF6vw1YEhsw0SO1K+/i6ZrhgfiAVmn0gzDCtQ2krYE0JWMOdZe3F6gb2ZUubTbW8YPy7gdr6EUI3MXCmzPxGojxvU0vljGQa0oILvo0KeMHiT3PuAO/0AEEewDxFfdo92Ls6IV1O5CH8HyevcrZlK9+CIgTHy1hA7JM9Q9N6ZC1EgIAAA==
    Metadata:
      aws:cdk:path: CodeStack/CDKMetadata/Default
  DescribeImagesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DescribeImages
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: ec2:DescribeImages
                Effect: Allow
                Resource: '*'
  GetLatestAMI:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.11
      Handler: index.handler
      Role: !Sub ${DescribeImagesRole.Arn}
      Timeout: 60
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import json
          import traceback

          def handler(event, context):
            try:
              response = boto3.client('ec2').describe_images(
                  Filters=[
                    {'Name': 'name', 'Values': [event['ResourceProperties']['Name']]}
                  ],
              )

              amis = sorted(response['Images'],
                            key=lambda x: x['CreationDate'],
                            reverse=True)
              id = amis[0]['ImageId']

              cfnresponse.send(event, context, cfnresponse.SUCCESS, {}, id)
            except:
              traceback.print_last()
              cfnresponse.send(event, context, cfnresponse.FAIL, {}, "ok")
  UbuntuAmi:
    Type: Custom::FindAMI
    Properties:
      ServiceToken: !Sub ${GetLatestAMI.Arn}
      Name: 'ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20240126'
Parameters:
  BucketName:
    Type: String
    Default: 'game-server-cdk-demo'
    Description: default value will be transformed to 'game-server-cdk-demo-<account-id>-<region>', use this to set your own bucket name
  CreateBucket:
    Type: String
    Default: 'false'
    Description: default is 'false', use 'true' if you want to create bucket
  CreateKeyPair:
    Type: String
    Default: 'false'
    Description: default is 'false', use 'true' if you want to create key pair
  ServerName:
    Type: String
    Default: 'dedicated-game-server'
    Description: default is 'dedicated-game-server', use this to set your own server name
  ServerSize:
    Type: String
    Default: t3.xlarge
    Description: t3.large is recommended for up to 3 players. t3.xlarge is recommended for 4-8 players, t3.2xlarge is recommended for up to 20 players. Other options are for premium setup.
    AllowedValues:
      - t3.xlarge
      - t3.large
      - t3.2xlarge
      - r6i.large
      - r6i.xlarge
      - r6i.2xlarge
Conditions:
  createBucket: !Equals [!Ref CreateBucket, 'true']
  createKeyPair: !Equals [!Ref CreateKeyPair, 'true']
